import os
import telebot
from deep_translator import GoogleTranslator
from langdetect import detect, LangDetectException

TOKEN = os.getenv("TOKEN") or "PASTE_YOUR_TOKEN_HERE"  # –≤ Railway –≤–æ–∑—å–º—ë–º –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
bot = telebot.TeleBot(TOKEN)

# –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é (–∫—É–¥–∞ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å)
DEFAULT_DEST = "ru"
# –¢–µ–∫—É—â–µ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
user_dest = {}

LANG_NAMES = {"ru": "—Ä—É—Å—Å–∫–∏–π", "tg": "—Ç–∞–¥–∂–∏–∫—Å–∫–∏–π", "en": "–∞–Ω–≥–ª–∏–π—Å–∫–∏–π"}

def translate_text(text: str, dest: str) -> str:
    """–ê–≤—Ç–æ-–æ–ø—Ä–µ–¥–µ–ª—è–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π —è–∑—ã–∫ –∏ –ø–µ—Ä–µ–≤–æ–¥–∏–º –≤ dest."""
    try:
        src = detect(text)
    except LangDetectException:
        src = "auto"
    # deep-translator –ø—Ä–∏–Ω–∏–º–∞–µ—Ç 'auto' –∫–∞–∫ –∞–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ
    return GoogleTranslator(source="auto", target=dest).translate(text)

@bot.message_handler(commands=["start", "help"])
def start(m):
    user_dest[m.from_user.id] = DEFAULT_DEST
    bot.reply_to(
        m,
        "–ü—Ä–∏–≤–µ—Ç! –Ø –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫ RU‚ÜîTG‚ÜîEN.\n"
        "–ö–æ–º–∞–Ω–¥—ã: /ru /tg /en ‚Äî –≤—ã–±—Ä–∞—Ç—å —è–∑—ã–∫ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è.\n"
        "–ö–æ–º–∞–Ω–¥–∞ /mode ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π —è–∑—ã–∫.\n"
        "–ü—Ä–æ—Å—Ç–æ –ø—Ä–∏—à–ª–∏ —Ç–µ–∫—Å—Ç ‚Äî —è –ø–µ—Ä–µ–≤–µ–¥—É üòâ"
    )

@bot.message_handler(commands=["ru", "tg", "en"])
def set_mode(m):
    dest = m.text[1:]
    user_dest[m.from_user.id] = dest
    bot.reply_to(m, f"–ì–æ—Ç–æ–≤ –ø–µ—Ä–µ–≤–æ–¥–∏—Ç—å –Ω–∞ {LANG_NAMES[dest]}.")

@bot.message_handler(commands=["mode"])
def show_mode(m):
    dest = user_dest.get(m.from_user.id, DEFAULT_DEST)
    bot.reply_to(m, f"–°–µ–π—á–∞—Å –ø–µ—Ä–µ–≤–æ–∂—É –Ω–∞: {LANG_NAMES[dest]} ({dest}).")

@bot.message_handler(func=lambda _m: True)
def handle_text(m):
    dest = user_dest.get(m.from_user.id, DEFAULT_DEST)
    try:
        translated = translate_text(m.text, dest)
        bot.reply_to(m, translated)
    except Exception as e:
        bot.reply_to(m, f"‚ùó–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞: {e}")

print("‚úÖ Bot is running‚Ä¶")
bot.polling(none_stop=True)
